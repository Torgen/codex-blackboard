on:
  push:
    branches:
      - master
  pull_request:

name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      TEST_BROWSER_DRIVER: playwright
    strategy:
      matrix:
        browser:
          - chromium
          - firefox
        test_script:
          - coverage.client.json
          - coverage.full.json
        include:
          - test_script: coverage.server.json
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive
      - name: Read Meteor version
        run: sed -e "s/@/_VERSION=/" < .meteor/release >> "$GITHUB_ENV"
      - name: Use Node.js 14.x
        uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/cache@v4
        id: cache-meteor
        with:
          path: ~/.meteor
          key: "${{ runner.os }}-meteor-install-\
            ${{ hashFiles('.meteor/versions') }}"
      - uses: meteorengineer/setup-meteor@v1
        if: steps.cache-meteor.outputs.cache-hit != 'true'
        with:
          meteor-release: ${{ env.METEOR_VERSION }}
      - uses: actions/cache@v4
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install
        run: ~/.meteor/meteor npm install

      - name: Test ${{ matrix.test_script }}
        run: ~/.meteor/meteor npm run-script ${{ matrix.test_script }}
        env:
          PLAYWRIGHT_BROWSER: ${{ matrix.browser }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: run-${{ matrix.test_script }}-${{ matrix.browser }}
          files: .coverage/summary.json
